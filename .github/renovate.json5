{
    enabled: true,
    forkProcessing: 'enabled',
    $schema: 'https://docs.renovatebot.com/renovate-schema.json',
    extends: [
        'config:best-practices',
        ':semanticCommits',
        ':semanticCommitTypeAll(chore)',
    ],
    reviewersFromCodeOwners: false,
    timezone: 'America/New_York',
    dependencyDashboard: true,
    dependencyDashboardTitle: 'Renovate Dashboard ðŸ¤–',
    rebaseWhen: 'conflicted',
    commitBodyTable: true,
    suppressNotifications: [
        'prIgnoreNotification',
    ],
    'pre-commit': {
        enabled: true,
    },
    'helm-values': {
        fileMatch: [
            '.*\\.ya?ml$',
        ],
    },
    kubernetes: {
        fileMatch: [
            '.*\\.ya?ml$',
        ],
        ignorePaths: [
            '.github',
        ],
    },
    labels: [
        'dependencies',
        'tech-debt',
    ],
    hostRules: [
        {
            matchHost: 'registry1.dso.mil',
            hostType: 'docker',
            description: 'Encrypted creds for registry1, scoped to this Github org using: https://docs.renovatebot.com/getting-started/migrating-secrets/#migrate-your-secrets-in-encrypted-form',
            username: '{{ secrets.IRONBANK_USERNAME }}',
            password: '{{ secrets.IRONBANK_PASSWORD }}',
        },
        {
            matchHost: 'cgr.dev',
            description: 'Encrypted creds for cgr.dev, scoped to this Github org using: https://docs.renovatebot.com/getting-started/migrating-secrets/#migrate-your-secrets-in-encrypted-form',
            username: '{{ secrets.CHAINGUARD_USERNAME }}',
            password: '{{ secrets.CHAINGUARD_PASSWORD }}',
        },
        {
            matchHost: 'ghcr.io',
            hostType: 'docker',
            description: 'Encrypted creds for ghcr.io, scoped to this Github org using: https://docs.renovatebot.com/getting-started/migrating-secrets/#migrate-your-secrets-in-encrypted-form',
            username: 'renovate',
            password: '{{ secrets.DEFENSEUNICORNS_PACKAGE_READ_PAT }}',
        },
    ],
    customManagers: [
        {
            customType: 'regex',
            fileMatch: [
                '.*(\\.ya?ml|\\.json)$',
            ],
            matchStrings: [
                'https:\\/\\/raw\\.githubusercontent\\.com\\/(?<depName>[^\\/]+\\/[^\\/]+)\\/(?<currentValue>[^\\/]+)',
            ],
            versioningTemplate: 'semver-coerced',
            datasourceTemplate: 'github-tags',
        },
        {
            customType: 'regex',
            fileMatch: [
                '.*(\\.ya?ml|\\.json)$',
            ],
            matchStrings: [
                'https:\\/\\/github\\.com\\/(?<depName>[^\\/]+\\/[^\\/]+)\\/raw\\/(?<currentValue>[^\\/]+)',
            ],
            versioningTemplate: 'semver-coerced',
            datasourceTemplate: 'github-tags',
        },
        {
            customType: 'regex',
            fileMatch: [
                '.*(\\.ya?ml|\\.json)$',
            ],
            matchStrings: [
                'https:\\/\\/github\\.com\\/(?<depName>[^\\/]+\\/[^\\/]+)\\/releases\\/download\\/(?<currentValue>[^\\/]+)',
            ],
            versioningTemplate: 'semver-coerced',
            datasourceTemplate: 'github-tags',
        },
        {
            customType: 'regex',
            fileMatch: [
                '.*(\\.ya?ml|\\.json)$',
            ],
            matchStrings: [
                'npm install ([\\w\\- ]+ )?(?<depName>@?[^\\s]*?)@(?<currentValue>[^\\s]+)',
            ],
            datasourceTemplate: 'npm',
        },
        {
            customType: 'regex',
            fileMatch: [
                '.*\\.ya?ml$',
            ],
            matchStrings: [
                '# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?( extractVersion=(?<extractVersion>.*?))?( registryUrl=(?<registryUrl>.*?))?\\s.*:\\s*[\'"]?(?<currentValue>[v0-9].*?)[\'"]?(\\s|$)',
            ],
            versioningTemplate: '{{#if versioning}}{{{versioning}}}{{else}}semver-coerced{{/if}}',
            extractVersionTemplate: '{{#if extractVersion}}{{{extractVersion}}}{{else}}^(?<version>.*)${{/if}}',
        },
        {
            customType: 'regex',
            fileMatch: [
                '.*\\.ya?ml$',
                '.*\\.sh$',
                '.*\\.?Dockerfile$',
            ],
            matchStrings: [
                '# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?( extractVersion=(?<extractVersion>.*?))?( registryUrl=(?<registryUrl>.*?))?\\s.*[A-Z]+=[\'"]?(?<currentValue>[v0-9].*?)[\'"]?(\\s|$)',
            ],
            versioningTemplate: '{{#if versioning}}{{{versioning}}}{{else}}semver-coerced{{/if}}',
            extractVersionTemplate: '{{#if extractVersion}}{{{extractVersion}}}{{else}}^(?<version>.*)${{/if}}',
        },
        {
            customType: 'regex',
            fileMatch: [
                '.*\\.ya?ml$',
            ],
            matchStrings: [
                '# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?\\s.*brew.*@\\s*[\'"]?(?<currentValue>[v0-9].*?)[\'"]?(\\s|$)',
            ],
            versioningTemplate: '{{#if versioning}}{{{versioning}}}{{else}}semver-coerced{{/if}}',
            extractVersionTemplate: '^v(?<version>.*)$',
        },
        {
            customType: 'regex',
            fileMatch: [
                '\\.*\\.ya?ml$',
            ],
            matchStrings: [
                '# renovate: image=(?<depName>.*?)\\s*image:\\s.*:(?<currentValue>[^\\s"]*)',
            ],
            datasourceTemplate: 'docker',
        },
        {
            customType: 'regex',
            fileMatch: [
                '(^|/)zarf\\.ya?ml$',
            ],
            matchStrings: [
                '- [\'"]?(?<depName>[^"\'\\s]+):(?<currentValue>[^"\'\\s]+)[\'"]?( # renovate:( versioning=(?<versioning>.*?))?( extractVersion=(?<extractVersion>.*?))?)?(\\s|$)',
            ],
            versioningTemplate: '{{#if versioning}}{{{versioning}}}{{else}}docker{{/if}}',
            extractVersionTemplate: '{{#if extractVersion}}{{{extractVersion}}}{{else}}^(?<version>.*)${{/if}}',
            datasourceTemplate: 'docker',
        },
        {
            customType: 'regex',
            fileMatch: [
                '(^|/)zarf\\.ya?ml$',
            ],
            matchStringsStrategy: 'recursive',
            matchStrings: [
                '(?m)charts:(.|\\n)*?(^\\s{4}[\\w:]+|\\n$|^\\s{2}-)',
                '(?m)name:(.|\\n)+?(^\\s{4}[\\w\\-:]+|\\n$|^\\s{2}-|^\\s{6}-)',
                '(?m)name: ["\']?(?<depName>.+?)["\']?$(.|\\n)*?version: ["\']?(?<currentValue>.+?)["\']?$(.|\\n)*?url: ["\']?(?<registryUrl>(https|http|file):\\/\\/.+?)["\']?$',
            ],
            datasourceTemplate: 'helm',
        },
        {
            customType: 'regex',
            fileMatch: [
                '(^|/)zarf.yaml$',
            ],
            matchStringsStrategy: 'recursive',
            matchStrings: [
                '(?m)charts:(.|\\n)*?(^\\s{4}[\\w:]+|\\n$|^\\s{2}-)',
                '(?m)name:(.|\\n)+?(^\\s{4}[\\w\\-:]+|\\n$|^\\s{2}-|^\\s{6}-)',
                '(?m)name: ["\']?(?<depName>.+?)["\']?$(.|\\n)*?url: ["\']?(?<registryUrl>(https|http|file):\\/\\/.+?)["\']?$(.|\\n)*?version: ["\']?(?<currentValue>.+?)["\']?$',
            ],
            datasourceTemplate: 'helm',
        },
        {
            customType: 'regex',
            fileMatch: [
                '(^|/)zarf\\.ya?ml$',
            ],
            matchStringsStrategy: 'recursive',
            matchStrings: [
                '(?m)charts:(.|\\n)*?(^\\s{4}[\\w:]+|\\n$|^\\s{2}-)',
                '(?m)name:(.|\\n)+?(^\\s{4}[\\w\\-:]+|\\n$|^\\s{2}-|^\\s{6}-)',
                '(?m)name:(.|\\n)*?version: ["\']?(?<currentValue>.+?)["\']?$(.|\\n)*?url: ["\']?(?<depName>.+?\\.git)["\']?$',
            ],
            datasourceTemplate: 'git-tags',
            versioningTemplate: 'regex:^v?(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)(-[\\w\\.]+\\.(?<build>\\d+))?',
        },
        {
            customType: 'regex',
            fileMatch: [
                '(^|/)zarf.yaml$',
            ],
            matchStringsStrategy: 'recursive',
            matchStrings: [
                '(?m)charts:(.|\\n)*?(^\\s{4}[\\w:]+|\\n$|^\\s{2}-)',
                '(?m)name:(.|\\n)+?(^\\s{4}[\\w\\-:]+|\\n$|^\\s{2}-|^\\s{6}-)',
                '(?m)name:(.|\\n)*?url: ["\']?(?<depName>.+?\\.git)["\']?$(.|\\n)*?version: ["\']?(?<currentValue>.+?)["\']?$',
            ],
            datasourceTemplate: 'git-tags',
            versioningTemplate: 'regex:^v?(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)(-[\\w\\.]+\\.(?<build>\\d+))?',
        },
        {
            customType: 'regex',
            fileMatch: [
                '(^|/)zarf\\.ya?ml$',
            ],
            matchStringsStrategy: 'recursive',
            matchStrings: [
                '(?m)charts:(.|\\n)*?(^\\s{4}[\\w:]+|\\n$|^\\s{2}-)',
                '(?m)name:(.|\\n)+?(^\\s{4}[\\w\\-:]+|\\n$|^\\s{2}-|^\\s{6}-)',
                '(?m)name:(.|\\n)*?version: ["\']?(?<currentValue>.+?)["\']?$(.|\\n)*?url: ["\']?oci:\\/\\/(?<depName>.+?)["\']?$',
            ],
            datasourceTemplate: 'docker',
        },
        {
            customType: 'regex',
            fileMatch: [
                '(^|/)zarf.yaml$',
            ],
            matchStringsStrategy: 'recursive',
            matchStrings: [
                '(?m)charts:(.|\\n)*?(^\\s{4}[\\w:]+|\\n$|^\\s{2}-)',
                '(?m)name:(.|\\n)+?(^\\s{4}[\\w\\-:]+|\\n$|^\\s{2}-|^\\s{6}-)',
                '(?m)name:(.|\\n)*?url: ["\']?oci:\\/\\/(?<depName>.+?)["\']?$(.|\\n)*?version: ["\']?(?<currentValue>.+?)["\']?$',
            ],
            datasourceTemplate: 'docker',
        },
        {
            customType: 'regex',
            fileMatch: [
                '(^|/)zarf\\.ya?ml$',
            ],
            matchStringsStrategy: 'recursive',
            matchStrings: [
                '(?m)manifests:(.|\\n)*?(^\\s{4}[\\w:]+|\\n$|^\\s{2}-)',
                '(?m)name:(.|\\n)+?(^\\s{4}[\\w\\-:]+|\\n$|^\\s{2}-|^\\s{6}-)',
                '(?m)name:(.|\\n)*?kustomizations:(.|\n)*?- ["\']?github.com\\/(?<depName>.+?)\\/\\/.*\\?ref=(?<currentValue>.+?)["\']?$',
            ],
            versioningTemplate: 'semver-coerced',
            datasourceTemplate: 'github-tags',
        },
        {
            customType: 'regex',
            fileMatch: [
                '(^|/)uds-bundle.yaml$',
            ],
            matchStringsStrategy: 'recursive',
            matchStrings: [
                '(?m)repository: ["\']?(?<depName>.+?)["\']?$(.)*(\n.*){0,2}ref: ["\']?(?<currentValue>.+?)["\']?$',
            ],
            datasourceTemplate: 'docker',
            versioningTemplate: 'regex:^v?(?<major>\\d+)(\\.(?<minor>\\d+))?(\\.(?<patch>\\d+))?(-uds\\.(?<build>\\d))?(-(?<compatibility>\\w+)?)?(.*?)?$',
        },
    ],
}
