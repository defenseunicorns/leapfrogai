version: "3.9"

services:
  leapfrog-postgres:
    image: postgres:15.3-bullseye
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: test
  
  # docker build --tag leapfrogai/migrate .
  leapfrog-postgres-bootstrapper:
    image: leapfrogai/migrate
    restart: on-failure
    environment:
      HOSTNAME: leapfrog-postgres
      PASSWORD: test

  chat-mongo:
    image: bitnami/mongodb:6.0.7
    ports:
      - 27017:27017

  chat-ui:
    image: chat-ui-local
    ports:
      - 3000:3000
    environment:
      HOST: "0.0.0.0"
      NODE_DEBUG: cluster,net,http,fs,tls,timers
      # MONGODB_URL: "mongodb://chat-mongo:27017"
      # HF_API_ROOT: "http://leapfrog-api:8080/huggingface/models"
      # HF_ACCESS_TOKEN: IDONTMATTER
      # PUBLIC_ORIGIN: "#http://leapfrog-api:8080/huggingface"
    command:
      - node
      - build

  mpt-7b-chat:
    image: leapfrogai/mpt-7b-chat
    container_name: mpt-7b-chat
    restart: on-failure
    ports:
      - '50051:50051'
    # GPU use
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]

  # docker build --tag leapfrogai/api .
  leapfrog-api:
    image: leapfrogai/api
    container_name: leapfrog
    restart: on-failure
    ports:
      - '8080:8080'
    environment:
      DB_USER: postgres
      DB_PASS: test
      DB_HOST: leapfrog-postgres
      DB_PORT: 5432
      DB_NAME: leapfrogai
    depends_on:
      leapfrog-postgres-bootstrapper:
        condition: service_completed_successfully
        restart: true


#   minio:
#     image: quay.io/minio/minio:RELEASE.2023-06-23T20-26-00Z
#     container_name: minio-s3-transcription
#     restart: on-failure
#     shm_size: 2gb
#     volumes:
#       - ./minio/data:/data:rw
#       - ./minio/config:/root/.minio
#     environment:
#       MINIO_ROOT_USER_FILE: /run/secrets/minio_root_user
#       MINIO_ROOT_PASSWORD_FILE: /run/secrets/minio_root_password
#       MINIO_DOMAIN: minio-s3
#       MINIO_REGION_NAME: openship-region
#     ports: 
#       - "9000:9000"
#       - "9001:9001"
#     entrypoint: sh
#     command: -c 'mkdir -p /data/models && mkdir -p /data/uss-openship && mkdir -p /data/loki && minio server /data --console-address "0.0.0.0:9001"'
#     secrets:
#       - minio_root_user
#       - minio_root_password

# secrets:
#   minio_root_user:
#     file: ./.secrets/minio-root-user.txt
#   minio_root_password:
#     file: ./.secrets/minio-root-password.txt
