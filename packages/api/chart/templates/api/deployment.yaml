apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  namespace: { { .Release.Namespace } }
spec:
  replicas: { { .Values.api.replicas } }
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      securityContext:
      {{- toYaml .Values.podSecurityContext | nindent 8 }}
      serviceAccountName: read-configmaps
      containers:
        - name: sidecar
          image: "{{ .Values.kiwigrid.image.repository }}:{{ .Values.kiwigrid.image.tag }}"
          imagePullPolicy: { { .Values.kiwigrid.image.imagePullPolicy } }
          volumeMounts:
            - name: api-model
              mountPath: /config/
          env:
            - name: LABEL
              value: "leapfrogai"
            - name: FOLDER
              value: /config/
            - name: RESOURCE
              value: both
            - name: UNIQUE_FILENAMES
              value: "true"
            - name: NAMESPACE
              value: leapfrogai
          securityContext:
            { { - toYaml .Values.kiwigrid.securityContext | nindent 12 } }
        - name: api-container
          image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: { { .Values.api.image.imagePullPolicy } }
          env:
            - name: LFAI_CONFIG_PATH
              value: /config/
            - name: LFAI_CONFIG_FILENAME
              value: "*.toml"
            - name: DEFAULT_EMBEDDINGS_MODEL
              value: { { .Values.api.env.defaultEmbeddingsModel } }
            - name: PORT
              value: { { .Values.api.env.port } }
            - name: SUPABASE_URL
              value: { { .Values.supabase.env.url } }
            - name: SUPABASE_ANON_KEY
              valueFrom:
                secretKeyRef:
                  name: supabase-bootstrap-jwt
                  key: anon-key
                  optional: true
          ports:
            - containerPort: { { .Values.api.env.port } }
          livenessProbe:
            httpGet:
              path: /healthz
              port: { { .Values.api.env.port } }
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: { { .Values.api.env.port } }
            initialDelaySeconds: 10
            periodSeconds: 10
          securityContext:
            { { - toYaml .Values.api.securityContext | nindent 12 } }
          volumeMounts:
            - name: api-model
              mountPath: /config
      volumes:
        - name: api-model
          emptyDir: {}
