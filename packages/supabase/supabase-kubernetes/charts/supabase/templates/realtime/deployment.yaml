{{- if .Values.realtime.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "supabase.realtime.fullname" . }}
  labels:
    {{- include "supabase.labels" . | nindent 4 }}
spec:
  {{- if not .Values.realtime.autoscaling.enabled }}
  replicas: {{ .Values.realtime.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "supabase.realtime.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.realtime.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "supabase.realtime.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.realtime.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "supabase.realtime.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.realtime.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-db
          image: postgres:15-alpine
          imagePullPolicy: IfNotPresent
          env:
            - name: DB_HOST
              value: {{ .Values.realtime.environment.DB_HOST | quote }}
            - name: DB_PORT
              value: {{ .Values.realtime.environment.DB_PORT | quote }}
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.db.secretName }}
                  key: username
          command: ["/bin/sh", "-c"]
          args:
            - |
              until pg_isready -h $(DB_HOST) -p $(DB_PORT) -U $(DB_USER); do
              echo "Waiting for database to start..."
              sleep 2
              done
            - echo "Database is ready"
      containers:
        - name: {{ include "supabase.realtime.name" $ }}
          securityContext:
            {{- toYaml .Values.realtime.securityContext | nindent 12 }}
          image: "{{ .Values.realtime.image.repository }}:{{ .Values.realtime.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.realtime.image.pullPolicy }}
          command: ["/bin/sh"]
          args: ["-c", "/app/bin/migrate && /app/bin/realtime eval 'Realtime.Release.seeds(Realtime.Repo)' && /app/bin/server"]
          env:
            {{- range $key, $value := .Values.realtime.environment }}
            - name: {{ $key }}
              valueFrom:
                configMapKeyRef:
                  name: {{ include "supabase.realtime.fullname" $ }}
                  key: {{ $key }}
            {{- end }}
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.db.secretName }}
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.db.secretName }}
                  key: password
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.jwt.secretName }}
                  key: secret
            - name: API_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.jwt.secretName }}
                  key: secret
          ports:
            - name: http
              containerPort: 4000
              protocol: TCP
          {{- with .Values.realtime.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.realtime.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.realtime.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.realtime.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.realtime.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.realtime.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}