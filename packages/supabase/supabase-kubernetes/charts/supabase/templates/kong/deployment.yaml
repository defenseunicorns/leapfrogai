{{- if .Values.kong.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "supabase.kong.fullname" . }}
  labels:
    {{- include "supabase.labels" . | nindent 4 }}
spec:
  {{- if not .Values.kong.autoscaling.enabled }}
  replicas: {{ .Values.kong.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "supabase.kong.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.kong.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "supabase.kong.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.kong.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "supabase.kong.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.kong.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ include "supabase.kong.name" $ }}
          securityContext:
            {{- toYaml .Values.kong.securityContext | nindent 12 }}
          image: "{{ .Values.kong.image.repository }}:{{ .Values.kong.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.kong.image.pullPolicy }}
          command: ["/bin/sh"]
          args: ["/scripts/wrapper.sh"]
          env:
            {{- range $key, $value := .Values.kong.environment }}
            - name: {{ $key }}
              valueFrom:
                configMapKeyRef:
                  name: {{ include "supabase.kong.fullname" $ }}
                  key: {{ $key }}
            {{- end }}
            - name: SUPABASE_ANON_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.jwt.secretName }}
                  key: anonKey
            - name: SUPABASE_SERVICE_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.jwt.secretName }}
                  key: serviceKey
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          {{- with .Values.kong.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: /home/kong/template.yml
              name: config
              subPath: template.yml
            - mountPath: /scripts
              name: wrapper
            {{- with .Values.kong.volumeMounts }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
      {{- with .Values.kong.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.kong.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.kong.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "supabase.kong.fullname" $ }}
            defaultMode: 0777
            items:
            - key: template.yml
              path: template.yml
        - name: wrapper
          configMap:
            name: {{ include "supabase.kong.fullname" $ }}
            defaultMode: 0777
            items:
            - key: wrapper.sh
              path: wrapper.sh
        {{- with .Values.kong.volumes }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
{{- end }}