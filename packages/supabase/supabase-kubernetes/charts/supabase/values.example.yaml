jwt:
  secretName: "demo-supabase-jwt"

smtp:
  secretName: "demo-supabase-smtp"

db:
  enabled: true
  image:
    repository: supabase/postgres
    pullPolicy: IfNotPresent
    tag: "14.1.0.105"
  podSecurityContext:
    readOnlyRootFilesystem: true
    runAsNonRoot: false
    runAsUser: 0
  secretName: "demo-supabase-db"
  persistence: 
    enabled: false
studio:
  image:
    repository: supabase/studio
    pullPolicy: IfNotPresent
    tag: 20230127-6bfd87b
  environment:
    SUPABASE_URL: https://supabase-kong.uds.dev.uds.dev
    SUPABASE_REST_URL: https://supabase-rest.uds.dev/rest/v1/
    STUDIO_PG_META_URL: http://supabase-supabase-kong.leapfrogai.svc.cluster.local:8000/pg
    SUPABASE_PUBLIC_URL: https://supabase-kong.uds.dev/
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
    tls: []
      # - secretName: studio.localhost
      #   hosts:
      #     - studio.localhost
    hosts:
      - host: studio.localhost
        paths:
          - path: /
            pathType: Prefix
            backend:
              serviceName: api
              servicePort: 3000

auth:
  image:
    repository: supabase/gotrue
    pullPolicy: IfNotPresent
    tag: v2.146.0
  
  environment:
    DB_HOST: supabase-supabase-db.leapfrogai.svc.cluster.local
    DB_PORT: "5432"
    DB_DRIVER: postgres
    DB_NAME: postgres
    DB_SSL: allow
    GOTRUE_API_HOST: "0.0.0.0"
    GOTRUE_API_PORT: "9999"
    GOTRUE_SITE_URL: http://studio.localhost
    GOTRUE_URI_ALLOW_LIST: "*"
    GOTRUE_DISABLE_SIGNUP: "false"
    GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
    GOTRUE_JWT_ADMIN_ROLES: service_role
    GOTRUE_JWT_AUD: authenticated
    GOTRUE_JWT_EXP: "3600"
    GOTRUE_EXTERNAL_EMAIL_ENABLED: "true"
    GOTRUE_MAILER_AUTOCONFIRM: "true"
    GOTRUE_SMTP_ADMIN_EMAIL: "your-mail@example.com"
    GOTRUE_SMTP_HOST: "smtp.example.com"
    GOTRUE_SMTP_PORT: "587"
    GOTRUE_SMTP_SENDER_NAME: "your-mail@example.com"
    GOTRUE_EXTERNAL_PHONE_ENABLED: "false"
    GOTRUE_SMS_AUTOCONFIRM: "false"
    GOTRUE_MAILER_URLPATHS_INVITE: "http://localhost:32534/auth/v1/verify"
    GOTRUE_MAILER_URLPATHS_CONFIRMATION: "http://localhost:32534/auth/v1/verify"
    GOTRUE_MAILER_URLPATHS_RECOVERY: "http://localhost:32534/auth/v1/verify"
    GOTRUE_MAILER_URLPATHS_EMAIL_CHANGE: "http://localhost:32534/auth/v1/verify"

rest:
  image:
    repository: postgrest/postgrest
    pullPolicy: IfNotPresent
    tag: latest
  environment:
    DB_HOST: supabase-supabase-db.leapfrogai.svc.cluster.local
    DB_PORT: "5432"
    DB_DRIVER: postgres
    DB_NAME: postgres
    DB_SSL: allow
    PGRST_DB_SCHEMA: public,storage
    PGRST_DB_ANON_ROLE: anon
    PGRST_DB_USE_LEGACY_GUCS: "false"

realtime:
  image:
    repository: supabase/realtime
    pullPolicy: IfNotPresent
    tag: v2.1.0
  podSecurityContext:
    readOnlyRootFilesystem: true
    runAsNonRoot: false
    runAsUser: 0
  environment:
    DB_HOST: supabase-supabase-db.leapfrogai.svc.cluster.local
    DB_PORT: "5432"
    DB_NAME: postgres
    DB_SSL: "false"
    PORT: "4000"
    REPLICATION_MODE: RLS
    REPLICATION_POLL_INTERVAL: "100"
    SECURE_CHANNELS: "true"
    SLOT_NAME: supabase_realtime_rls
    TEMPORARY_SLOT: "true"
    DB_AFTER_CONNECT_QUERY: 'SET search_path TO _realtime'
    DB_ENC_KEY: supabaserealtime
    FLY_ALLOC_ID: fly123
    FLY_APP_NAME: realtime
    SECRET_KEY_BASE: UpNVntn3cDxHJpq99YMc1T1AQgQpc8kfYTuRgBiYa15BLrx8etQoXz3gZv1/u2oq
    ERL_AFLAGS: -proto_dist inet_tcp
    ENABLE_TAILSCALE: "false"
    DNS_NODES: "''"
meta:
  environment:
    DB_HOST: supabase-supabase-db.leapfrogai.svc.cluster.local
    DB_PORT: "5432"
    DB_DRIVER: postgres
    DB_NAME: postgres
    DB_SSL: disable
    PG_META_PORT: "8080"

storage:
  image:
    repository: supabase/storage-api
    pullPolicy: IfNotPresent
    tag: v0.26.1
  environment:
    DB_HOST: supabase-supabase-db.leapfrogai.svc.cluster.local
    DB_PORT: "5432"
    DB_DRIVER: postgres
    DB_NAME: postgres
    DB_SSL: disable
    POSTGREST_URL: http://demo-supabase-rest.leapfrogai.svc.cluster.local:3000
    PGOPTIONS: -c search_path=storage,public
    FILE_SIZE_LIMIT: '52428800'
    STORAGE_BACKEND: file
    FILE_STORAGE_BACKEND_PATH: /var/lib/storage
    TENANT_ID: stub
    REGION: stub
    GLOBAL_S3_BUCKET: stub
  persistence: 
    enabled: false
    accessModes:
      - ReadWriteOnce
    size: 4Gi
    storageClassName: standard
    annotations:
      helm.sh/resource-policy: "keep"

kong:
  image:
    repository: kong
    pullPolicy: IfNotPresent
    tag: 2.8.1
  podSecurityContext:
    readOnlyRootFilesystem: true
    runAsNonRoot: false
    runAsUser: 0
  environment:
    KONG_DATABASE: "off"
    KONG_DECLARATIVE_CONFIG: /home/kong/kong.yml
    KONG_DNS_ORDER: LAST,A,CNAME
    KONG_PLUGINS: request-transformer,cors,key-auth,acl
    KONG_LOG_LEVEL: debug

  ingress:
    enabled: true
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
    tls: []
      # - secretName: localhost
      #   hosts:
      #     - localhost
    hosts:
      - host: localhost
        paths:
          - path: /
            pathType: Prefix
            backend:
              serviceName: api
              servicePort: 80