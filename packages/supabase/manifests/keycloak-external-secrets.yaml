apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: keycloak-clients
spec:
  refreshInterval: 1h  # Refresh interval for the secret
  secretStoreRef:
    kind: ClusterSecretStore
    name: keycloak
  target:
    name: keycloak-clients  # Name of the Kubernetes secret to create/update
  data:
    - remoteRef:
        key: keycloak
        property: clients[].clientId  # Specify the property path to fetch client IDs
---
apiVersion: external-secrets.io/v1alpha1
kind: ClusterSecretStore
metadata:
  name: keycloak
spec:
  provider:
    webhook:
      auth:
        clientSecret:
          name: keycloak-admin
          key: admin-password
      method: post
      url: https://keycloak-http.keycloak.svc.cluster.local/auth
---
apiVersion: generators.external-secrets.io/v1alpha1
kind: Webhook
metadata:
  name: keycloak-token-generator
spec:
  url: "https://keycloak-http.keycloak.svc.cluster.local/auth"
  result:
    jsonPath: "$.args"
  headers:
    Content-Type: application/x-www-form-urlencoded
  body: |
    client_id:admin-cli
    username:leapfrogai-admin
    password:<my-fake-password>
    grant_type:password
  secrets:
  - name: auth
    secretRef:
      name: keycloak-credentials
---
apiVersion: v1
kind: Secret
metadata:
  name: keycloak-credentials
  labels:
    generators.external-secrets.io/type: webhook #Needed to allow webhook to use this secret
data:
  username: dGVzdA== # "test"
  password: dGVzdA== # "test"
  param: dGVzdA== # "test"