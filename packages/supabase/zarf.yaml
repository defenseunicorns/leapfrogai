# yaml-language-server: $schema=https://raw.githubusercontent.com/defenseunicorns/zarf/main/zarf.schema.json
kind: ZarfPackageConfig
metadata:
  name: supabase
  version: '###ZARF_PKG_TMPL_IMAGE_VERSION###'
  description: >
    supabase instance and all of its dependencies

constants:
  - name: DASHBOARD_USERNAME
    description: The dashboard's (Supabase studio) default username
    value: supabase-admin
  - name: EXTERNAL_KEYCLOAK_CLIENT_ID
    description: 'External keycloak client value'
    value: "uds-supabase"

variables:
  - name: HOSTED_DOMAIN
    default: "uds.dev"
  - name: UI_SQL_SCHEMA
    type: file
    default: "migrations/20240322174521_ui_sql_schema.sql"
    autoIndent: true
  - name: API_SQL_SCHEMA
    type: file
    default: "migrations/20240322174520_api_sql_schema.sql"
    autoIndent: true
  - name: MIGRATION_SCRIPT
    type: file
    default: "migrations/migrate.sh"
    autoIndent: true

  - name: ENABLE_AUTH
    description: 'Enable Supabases built-in authentication and authorization parts'
    default: "true"
  - name: ENABLE_META
    description: 'Enable the restful API for managing Postgres, fetch tables, add roles, and run queries'
    default: "true"
  - name: ENABLE_REALTIME
    description: 'Enables the API for sending and receiving messages between clients in realtime in addition to listening for db changes'
    default: "true"
  - name: ENABLE_REST
    description: 'Enable the autogenerated high level rest API for interacting with the database'
    default: "true"
  - name: ENABLE_STORAGE
    description: 'Enable the Supabase object store'
    default: "true"
  - name: ENABLE_STUDIO
    description: 'Enable the dashboard for managing Supabase, this dashboard depends on and sits atop other Supabase components'
    default: "true"
  - name: ENABLE_VOLUME_PERMISSIONS
    description: 'Enable init container that changes the owner/group of the PV mount point to runAsUser:fsGroup'
    default: "false"
  - name: ENABLE_KONG
    description: 'Enable the API gateway that automatically handles the routing between the Supabase workloads'
    default: "true"
  - name: ENABLE_POSTGRES
    description: 'Enable built-in postgres db to store account information and serve as the backend db for integrating applications'
    default: "true"
  - name: ENABLE_EXTERNAL_KEYCLOAK
    description: 'Enable the integration between Supabase and an external keycloak instance be enabled'
    default: "true"

components:
  - name: supabase
    required: true
    charts:
      # This exists because the jwt token job fails to run in the main helm chart at the proper time due to its reliance on `helm.sh/hook: post-install`.
      # This annotation causes it to run at the end of the Supabase Zarf component.
      # Because of this the job never starts. As parts of Supabase rely on this token being created before moving on.
      # When attempts are made to move it earlier in the process within the same component the job does not complete due to pre-requisites that the job has.
      # So all of this has been moved into the bootstrap values file and component.
      - name: supabase-bootstrap
        namespace: leapfrogai
        url: oci://registry-1.docker.io/bitnamicharts/supabase
        releaseName: supabase-bootstrap
        version: 4.0.1
        valuesFiles:
          - "bitnami-values.yaml"
          - "bitnami-values-bootstrap.yaml"
      - name: supabase-secrets-generator
        namespace: leapfrogai
        localPath: chart/
        releaseName: supabase-secrets-generator
        version: 0.0.1
        valuesFiles:
          - "bitnami-values.yaml"
      - name: supabase
        namespace: leapfrogai
        url: oci://registry-1.docker.io/bitnamicharts/supabase
        releaseName: supabase
        version: 4.0.1
        valuesFiles:
          - "bitnami-values.yaml"
    images:
      - docker.io/bitnami/gotrue:2.149.0-debian-12-r0
      - docker.io/bitnami/jwt-cli:6.0.0-debian-12-r19
      - docker.io/bitnami/kubectl:1.29.3-debian-12-r4
      - docker.io/bitnami/os-shell:12-debian-12-r18
      - docker.io/bitnami/postgrest:11.2.2-debian-12-r14
      - docker.io/bitnami/supabase-postgres:15.1.1-debian-12-r24
      - docker.io/bitnami/supabase-postgres-meta:0.80.0-debian-12-r1
      - docker.io/bitnami/supabase-realtime:2.28.22-debian-12-r0
      - docker.io/bitnami/supabase-storage:0.48.4-debian-12-r0
      - docker.io/bitnami/supabase-studio:0.24.3-debian-12-r0
      - docker.io/bitnami/kong:3.6.1-debian-12-r13
    files:
      - source: migrations/migrate.sh
        target: migrations/migrate.sh
      - source: migrations/20240322174521_ui_sql_schema.sql
        target: migrations/20240322174521_ui_sql_schema.sql
      - source: migrations/20240322174520_api_sql_schema.sql
        target: migrations/20240322174520_api_sql_schema.sql
  - name: supabase-post-process
    description: "Perform necessary post processing here"
    required: true
    actions:
      onDeploy:
        before:
          # Deletes the initial kong config created by the upstream chart
          - cmd: kubectl delete cm supabase-kong-declarative-config -n leapfrogai
        after:
          # Restarts supabase-kong after the new kong config has been applied
          # so that it can be loaded into the kong container
          - cmd: kubectl rollout restart deployment supabase-kong -n leapfrogai
          - cmd: kubectl rollout status deployment supabase-kong -n leapfrogai
    manifests:
      # Applies an update kong config that includes basic auth, this gets applied
      # after the kong pods have started so the original config needs to be deleted and pod restarted
      - name: supabase-manifests
        namespace: leapfrogai
        files:
          - "manifests/declarative-conf-configmap.yaml"
