// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.12.4
// source: audio/audio.proto

package audio

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CompletionRequest is the payload to request completion
type CompletionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prompt           string             `protobuf:"bytes,1,opt,name=prompt,proto3" json:"prompt,omitempty"`
	Suffix           string             `protobuf:"bytes,2,opt,name=suffix,proto3" json:"suffix,omitempty"`
	MaxTokens        int32              `protobuf:"varint,3,opt,name=max_tokens,json=maxTokens,proto3" json:"max_tokens,omitempty"`
	Temperature      float32            `protobuf:"fixed32,4,opt,name=temperature,proto3" json:"temperature,omitempty"`
	TopP             float32            `protobuf:"fixed32,5,opt,name=top_p,json=topP,proto3" json:"top_p,omitempty"`
	N                int32              `protobuf:"varint,6,opt,name=n,proto3" json:"n,omitempty"`
	Stream           bool               `protobuf:"varint,7,opt,name=stream,proto3" json:"stream,omitempty"`
	Logprobs         int32              `protobuf:"varint,8,opt,name=logprobs,proto3" json:"logprobs,omitempty"`
	Echo             bool               `protobuf:"varint,9,opt,name=echo,proto3" json:"echo,omitempty"`
	Stop             string             `protobuf:"bytes,10,opt,name=stop,proto3" json:"stop,omitempty"` // You can only represent Union[str, list] as a string.
	PresencePenalty  float32            `protobuf:"fixed32,11,opt,name=presence_penalty,json=presencePenalty,proto3" json:"presence_penalty,omitempty"`
	FrequencePenalty float32            `protobuf:"fixed32,12,opt,name=frequence_penalty,json=frequencePenalty,proto3" json:"frequence_penalty,omitempty"`
	BestOf           int32              `protobuf:"varint,13,opt,name=best_of,json=bestOf,proto3" json:"best_of,omitempty"`
	LogitBias        map[string]float32 `protobuf:"bytes,14,rep,name=logit_bias,json=logitBias,proto3" json:"logit_bias,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"` // Maps are represented as a pair of a key type and a value type.
}

func (x *CompletionRequest) Reset() {
	*x = CompletionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_audio_audio_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompletionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompletionRequest) ProtoMessage() {}

func (x *CompletionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_audio_audio_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompletionRequest.ProtoReflect.Descriptor instead.
func (*CompletionRequest) Descriptor() ([]byte, []int) {
	return file_audio_audio_proto_rawDescGZIP(), []int{0}
}

func (x *CompletionRequest) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

func (x *CompletionRequest) GetSuffix() string {
	if x != nil {
		return x.Suffix
	}
	return ""
}

func (x *CompletionRequest) GetMaxTokens() int32 {
	if x != nil {
		return x.MaxTokens
	}
	return 0
}

func (x *CompletionRequest) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *CompletionRequest) GetTopP() float32 {
	if x != nil {
		return x.TopP
	}
	return 0
}

func (x *CompletionRequest) GetN() int32 {
	if x != nil {
		return x.N
	}
	return 0
}

func (x *CompletionRequest) GetStream() bool {
	if x != nil {
		return x.Stream
	}
	return false
}

func (x *CompletionRequest) GetLogprobs() int32 {
	if x != nil {
		return x.Logprobs
	}
	return 0
}

func (x *CompletionRequest) GetEcho() bool {
	if x != nil {
		return x.Echo
	}
	return false
}

func (x *CompletionRequest) GetStop() string {
	if x != nil {
		return x.Stop
	}
	return ""
}

func (x *CompletionRequest) GetPresencePenalty() float32 {
	if x != nil {
		return x.PresencePenalty
	}
	return 0
}

func (x *CompletionRequest) GetFrequencePenalty() float32 {
	if x != nil {
		return x.FrequencePenalty
	}
	return 0
}

func (x *CompletionRequest) GetBestOf() int32 {
	if x != nil {
		return x.BestOf
	}
	return 0
}

func (x *CompletionRequest) GetLogitBias() map[string]float32 {
	if x != nil {
		return x.LogitBias
	}
	return nil
}

// CompletionRespones are what's returned by the gRPC service
type CompletionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Completion string `protobuf:"bytes,1,opt,name=completion,proto3" json:"completion,omitempty"`
}

func (x *CompletionResponse) Reset() {
	*x = CompletionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_audio_audio_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompletionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompletionResponse) ProtoMessage() {}

func (x *CompletionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_audio_audio_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompletionResponse.ProtoReflect.Descriptor instead.
func (*CompletionResponse) Descriptor() ([]byte, []int) {
	return file_audio_audio_proto_rawDescGZIP(), []int{1}
}

func (x *CompletionResponse) GetCompletion() string {
	if x != nil {
		return x.Completion
	}
	return ""
}

var File_audio_audio_proto protoreflect.FileDescriptor

var file_audio_audio_proto_rawDesc = []byte{
	0x0a, 0x11, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x22, 0xfa, 0x03, 0x0a, 0x11, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x66, 0x66,
	0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78,
	0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x5f, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x04, 0x74, 0x6f, 0x70, 0x50, 0x12, 0x0c, 0x0a, 0x01, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x01, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x6f, 0x67, 0x70, 0x72, 0x6f, 0x62, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x6c, 0x6f, 0x67, 0x70, 0x72, 0x6f, 0x62, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x63, 0x68, 0x6f,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x65, 0x63, 0x68, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x74, 0x6f, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x6f, 0x70,
	0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x70, 0x65, 0x6e,
	0x61, 0x6c, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x73,
	0x65, 0x6e, 0x63, 0x65, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x12, 0x2b, 0x0a, 0x11, 0x66,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x65, 0x73, 0x74,
	0x5f, 0x6f, 0x66, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x62, 0x65, 0x73, 0x74, 0x4f,
	0x66, 0x12, 0x46, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x74, 0x5f, 0x62, 0x69, 0x61, 0x73, 0x18,
	0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x4c, 0x6f, 0x67, 0x69, 0x74, 0x42, 0x69, 0x61, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09,
	0x6c, 0x6f, 0x67, 0x69, 0x74, 0x42, 0x69, 0x61, 0x73, 0x1a, 0x3c, 0x0a, 0x0e, 0x4c, 0x6f, 0x67,
	0x69, 0x74, 0x42, 0x69, 0x61, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x34, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x52, 0x0a,
	0x0f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x3f, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x61,
	0x75, 0x64, 0x69, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x64, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x75, 0x6e, 0x69, 0x63, 0x6f, 0x72, 0x6e, 0x73, 0x2f,
	0x6c, 0x65, 0x61, 0x70, 0x66, 0x72, 0x6f, 0x67, 0x61, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_audio_audio_proto_rawDescOnce sync.Once
	file_audio_audio_proto_rawDescData = file_audio_audio_proto_rawDesc
)

func file_audio_audio_proto_rawDescGZIP() []byte {
	file_audio_audio_proto_rawDescOnce.Do(func() {
		file_audio_audio_proto_rawDescData = protoimpl.X.CompressGZIP(file_audio_audio_proto_rawDescData)
	})
	return file_audio_audio_proto_rawDescData
}

var file_audio_audio_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_audio_audio_proto_goTypes = []interface{}{
	(*CompletionRequest)(nil),  // 0: audio.CompletionRequest
	(*CompletionResponse)(nil), // 1: audio.CompletionResponse
	nil,                        // 2: audio.CompletionRequest.LogitBiasEntry
}
var file_audio_audio_proto_depIdxs = []int32{
	2, // 0: audio.CompletionRequest.logit_bias:type_name -> audio.CompletionRequest.LogitBiasEntry
	0, // 1: audio.GenerateService.Complete:input_type -> audio.CompletionRequest
	1, // 2: audio.GenerateService.Complete:output_type -> audio.CompletionResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_audio_audio_proto_init() }
func file_audio_audio_proto_init() {
	if File_audio_audio_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_audio_audio_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompletionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_audio_audio_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompletionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_audio_audio_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_audio_audio_proto_goTypes,
		DependencyIndexes: file_audio_audio_proto_depIdxs,
		MessageInfos:      file_audio_audio_proto_msgTypes,
	}.Build()
	File_audio_audio_proto = out.File
	file_audio_audio_proto_rawDesc = nil
	file_audio_audio_proto_goTypes = nil
	file_audio_audio_proto_depIdxs = nil
}
